---
- name: Convert CSV into vars/main.yml using Ansible only
  hosts: localhost
  gather_facts: false

  vars:
    input_csv: files/vip_config.csv
    output_yaml: vars/main.yml

  tasks:
    - name: Read rows from CSV
      community.general.read_csv:
        path: "{{ input_csv }}"
      register: csv_data

    - name: Get unique VIP definitions
      ansible.builtin.set_fact:
        vip_defs: >-
          {{
            csv_data.list |
            groupby('vip_app_name') |
            map(attribute='1') |
            map('unique') |
            map('list') |
            map('first') |
            list
          }}

    - name: Add node_list to each VIP
      ansible.builtin.set_fact:
        vip_data: >-
          {{
            vip_defs |
            map('combine', {
              'node_list': csv_data.list |
                selectattr('vip_app_name', 'equalto', item.vip_app_name) |
                selectattr('port', 'equalto', item.port) |
                map('combine', {
                  'node_pair': item.node_name ~ ';' ~ item.node_ip
                }) |
                map(attribute='node_pair') |
                list
            })
          }}

    - name: Create vars/main.yml from vip_data
      ansible.builtin.copy:
        dest: "{{ output_yaml }}"
        mode: '0644'
        content: |
          vip_data:
          {% for vip in vip_data %}
            - vip_app_name: "{{ vip.vip_app_name }}"
              port: {{ vip.port }}
              vip_addr: "{{ vip.vip_addr }}"
              description: "{{ vip.description }}"
              node_list:
              {% for node in vip.node_list %}
                - "{{ node }}"
              {% endfor %}
              monitor_type: "{{ vip.monitor_type }}"
              lbmethod: "{{ vip.lbmethod }}"
              vpersis: "{{ vip.vpersis }}"
          {% endfor %}
